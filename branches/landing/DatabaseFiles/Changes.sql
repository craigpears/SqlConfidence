USE [SqlConfidence]

-- Support for update command changes and removing variable data sources
IF exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='DATA_SOURCES_TABLES' and COLUMN_NAME='DST_FUNCTION_NAME')
EXEC sp_RENAME 'DATA_SOURCES_TABLES.DST_FUNCTION_NAME', 'DST_TABLE_NAME', 'COLUMN'

IF exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='DATA_SOURCES_TABLES' and COLUMN_NAME='DST_IS_SEEDED')
BEGIN
	ALTER TABLE DATA_SOURCES_TABLES DROP COLUMN DST_IS_SEEDED
	ALTER TABLE DATA_SOURCES_TABLES DROP COLUMN DST_PARAM_ONE_NAME
	ALTER TABLE DATA_SOURCES_TABLES DROP COLUMN DST_PARAM_ONE_VALUE
	ALTER TABLE DATA_SOURCES_TABLES DROP COLUMN DST_PARAM_TWO_NAME
	ALTER TABLE DATA_SOURCES_TABLES DROP COLUMN DST_PARAM_TWO_VALUE
	ALTER TABLE DATA_SOURCES_TABLES DROP COLUMN DST_PARAM_THREE_NAME
	ALTER TABLE DATA_SOURCES_TABLES DROP COLUMN DST_PARAM_THREE_VALUE
END

IF exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='USERS_ACTIONS' and COLUMN_NAME='USA_DATA_1')
BEGIN
	EXEC sp_RENAME 'USERS_ACTIONS.USA_DATA_1', 'EXQ_ID', 'COLUMN'
	ALTER TABLE USERS_ACTIONS ALTER COLUMN EXQ_ID int
	ALTER TABLE USERS_ACTIONS ADD USA_RESET_DATE DATETIME NULL
END

-- Rename any references to the old functions
IF exists(select * from DATA_SOURCES_TABLES WHERE DST_TABLE_NAME = 'fnDataSourceOrganisationsAndStaff')
BEGIN
	UPDATE DATA_SOURCES_TABLES SET DST_TABLE_NAME = 'SRC_ORGANISATIONS_AND_STAFF', DST_TABLE_ALIAS = 'ORGANISATIONS_AND_STAFF' WHERE DST_ID = 1
	UPDATE EXERCISES_QUESTIONS SET EXQ_ANSWERS_TEMPLATE = REPLACE(EXQ_ANSWERS_TEMPLATE, 'Employees', 'ORGANISATIONS_AND_STAFF')
END

-- Support for admin console
update users set us_admin_access = 1 where us_email_address = 'craig_pears@hotmail.com'
update users set us_admin_access = 1 where us_email_address = 'mary.halpin9@gmail.com'

IF not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='EXERCISES' and COLUMN_NAME='EX_PUBLISHED')
BEGIN
	ALTER TABLE EXERCISES ADD EX_PUBLISHED BIT NULL
	ALTER TABLE EXERCISES ADD EX_PUBLISHED_DATE DATETIME NULL
	ALTER TABLE EXERCISES ADD EX_PUBLISHED_BY VARCHAR(50) NULL
END

IF not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='EXERCISES' and COLUMN_NAME='EX_DIFFICULTY')
BEGIN
	ALTER TABLE EXERCISES 
	ADD EX_DIFFICULTY INT NOT NULL
	CONSTRAINT EX_DIFFICULTY_DEFAULT DEFAULT 0
	WITH VALUES
END

IF exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='EXERCISES_QUESTIONS' and COLUMN_NAME='DS_ID')
BEGIN
	-- Drop DS_ID from exercises_questions
	ALTER TABLE EXERCISES_QUESTIONS DROP EXERCISES_QUESTIONS_DATA_SOURCES
	ALTER TABLE EXERCISES_QUESTIONS DROP DS_ID
END

IF not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='EXERCISES' and COLUMN_NAME='EX_ORDER')
BEGIN
	ALTER TABLE EXERCISES ADD EX_ORDER int;

	-- Set the order for existing exercises
	update ex 
	set ex_order = vData.exercise_order
	from
	(select ex_id,
	(row_number() over (partition by ex_difficulty order by ex_name)) - 1 as 'exercise_order'
	from exercises) vData
	join exercises ex on ex.EX_ID = vData.EX_ID;

	ALTER TABLE EXERCISES ALTER COLUMN EX_ORDER int NOT NULL;
END

IF not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='EXERCISES' and COLUMN_NAME='EX_SHOW_QUERY_BUILDER')
BEGIN
	ALTER TABLE EXERCISES ADD EX_SHOW_QUERY_BUILDER bit;
END

IF not exists(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='EXERCISES_QUESTIONS' and COLUMN_NAME='EXQ_STARTING_SQL')
BEGIN
	ALTER TABLE EXERCISES_QUESTIONS ADD EXQ_STARTING_SQL varchar(2000);
END

-- Added GUIDs so we can synchronise things between instances
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXERCISES' AND COLUMN_NAME='EX_ID_GUID')
BEGIN
	ALTER TABLE EXERCISES ADD EX_ID_GUID UNIQUEIDENTIFIER UNIQUE NOT NULL DEFAULT NEWSEQUENTIALID();
END

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXERCISES_QUESTIONS' AND COLUMN_NAME='EXQ_ID_GUID')
BEGIN
	ALTER TABLE EXERCISES_QUESTIONS ADD EXQ_ID_GUID UNIQUEIDENTIFIER UNIQUE NOT NULL DEFAULT NEWSEQUENTIALID();
END

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='DATA_SOURCES' AND COLUMN_NAME='DS_ID_GUID')
BEGIN
	ALTER TABLE DATA_SOURCES ADD DS_ID_GUID UNIQUEIDENTIFIER UNIQUE NOT NULL DEFAULT NEWSEQUENTIALID();
END

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='DATA_SOURCES_TABLES' AND COLUMN_NAME='DST_ID_GUID')
BEGIN
	ALTER TABLE DATA_SOURCES_TABLES ADD DST_ID_GUID UNIQUEIDENTIFIER UNIQUE NOT NULL DEFAULT NEWSEQUENTIALID();
END

-- Adding different exercise types
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXERCISES_QUESTIONS' AND COLUMN_NAME='EXQ_TYPE')
BEGIN
	ALTER TABLE EXERCISES_QUESTIONS ADD EXQ_TYPE int NOT NULL DEFAULT 0;
END

-- Changing difficulty to section name
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXERCISES' AND COLUMN_NAME='EX_SECTION_NAME')
BEGIN
	ALTER TABLE EXERCISES ADD EX_SECTION_NAME varchar(255) NULL;
	UPDATE EXERCISES SET EX_SECTION_NAME = EX_DIFFICULTY;
	ALTER TABLE EXERCISES ALTER COLUMN EX_SECTION_NAME varchar(255) NOT NULL;
	ALTER TABLE EXERCISES DROP CONSTRAINT EX_DIFFICULTY_DEFAULT;
	ALTER TABLE EXERCISES DROP COLUMN EX_DIFFICULTY;
END

-- Create the questions choices table
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='EXERCISES_QUESTIONS_CHOICES' )
BEGIN
	CREATE TABLE [dbo].[EXERCISES_QUESTIONS_CHOICES](
		[EXQC_ID] [UNIQUEIDENTIFIER] NOT NULL,
		[EXQ_ID] [INT] NOT NULL,
		[EXQC_DESCRIPTION] [NVARCHAR](20) NOT NULL,
	 CONSTRAINT [PK_EXERCISES_QUESTIONS_CHOICES] PRIMARY KEY CLUSTERED 
	(
		[EXQC_ID] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]


	ALTER TABLE [dbo].[EXERCISES_QUESTIONS_CHOICES]  WITH CHECK ADD  CONSTRAINT [FK_EXERCISES_QUESTIONS_CHOICES_EXERCISES_QUESTIONS] FOREIGN KEY([EXQ_ID])
	REFERENCES [dbo].[EXERCISES_QUESTIONS] ([EXQ_ID])

	ALTER TABLE [dbo].[EXERCISES_QUESTIONS_CHOICES] CHECK CONSTRAINT [FK_EXERCISES_QUESTIONS_CHOICES_EXERCISES_QUESTIONS]

END

-- Create the unit tests table
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='EXERCISES_QUESTIONS_UNIT_TESTS' )
BEGIN
	CREATE TABLE [dbo].[EXERCISES_QUESTIONS_UNIT_TESTS](
		[EXQUT_ID] [uniqueidentifier] NOT NULL,
		[EXQ_ID] [int] NOT NULL,
		[EXQUT_NAME] [nvarchar](50) NOT NULL,
		[EXQUT_DESCRIPTION] [nvarchar](500) NOT NULL,
		[EXQUT_TYPE] [int] NOT NULL,
		[EXQUT_DATA] [nvarchar](max) NOT NULL,
		[EXQUT_CREATED_DATE] [datetime] NOT NULL,
		[EXQUT_CREATED_BY] [nvarchar](50) NOT NULL,
		[EXQUT_UPDATED_DATE] [datetime] NULL,
		[EXQUT_UPDATED_BY] [nvarchar](50) NULL,
		[EXQUT_DELETED] [bit] NOT NULL,
		[EXQUT_DELETED_DATE] [datetime] NULL,
		[EXQUT_DELETED_BY] [nvarchar](50) NULL,
	 CONSTRAINT [PK_EXERCISES_QUESTIONS_UNIT_TESTS] PRIMARY KEY CLUSTERED 
	(
		[EXQUT_ID] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
	
	ALTER TABLE [dbo].[EXERCISES_QUESTIONS_UNIT_TESTS] ADD  CONSTRAINT [DF_EXERCISES_QUESTIONS_UNIT_TESTS_EXQUT_ID]  DEFAULT (newsequentialid()) FOR [EXQUT_ID]
	
	ALTER TABLE [dbo].[EXERCISES_QUESTIONS_UNIT_TESTS]  WITH CHECK ADD  CONSTRAINT [FK_EXERCISES_QUESTIONS_UNIT_TESTS_EXERCISES_QUESTIONS] FOREIGN KEY([EXQ_ID])
	REFERENCES [dbo].[EXERCISES_QUESTIONS] ([EXQ_ID])

	ALTER TABLE [dbo].[EXERCISES_QUESTIONS_UNIT_TESTS] CHECK CONSTRAINT [FK_EXERCISES_QUESTIONS_UNIT_TESTS_EXERCISES_QUESTIONS]
END

-- Fix the UserId Column being a string
ALTER TABLE EXERCISES_QUESTIONS_ANSWERED ALTER COLUMN US_ID INT

-- Make the exercise names slightly longer (from 50 to 70)
ALTER TABLE EXERCISES ALTER COLUMN EX_NAME VARCHAR(70)

-- Change in design of the unit tests
IF EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXERCISES_QUESTIONS_UNIT_TESTS' AND COLUMN_NAME='EXQUT_TYPE')
BEGIN
	ALTER TABLE EXERCISES_QUESTIONS_UNIT_TESTS DROP COLUMN EXQUT_TYPE
END

IF EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXERCISES_QUESTIONS_UNIT_TESTS' AND COLUMN_NAME='EXQUT_DATA')
BEGIN
	ALTER TABLE EXERCISES_QUESTIONS_UNIT_TESTS DROP COLUMN EXQUT_DATA
END

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXERCISES_QUESTIONS_UNIT_TESTS' AND COLUMN_NAME='EXQUT_SQL_TO_RUN')
BEGIN
	ALTER TABLE EXERCISES_QUESTIONS_UNIT_TESTS ADD EXQUT_SQL_TO_RUN VARCHAR(MAX) NULL
END

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXERCISES_QUESTIONS_UNIT_TESTS' AND COLUMN_NAME='EXQUT_SQL_TO_COMPARE')
BEGIN
	ALTER TABLE EXERCISES_QUESTIONS_UNIT_TESTS ADD EXQUT_SQL_TO_COMPARE VARCHAR(MAX) NULL
END
